    <%= f.hidden_field :val_3, :value => 'No Door' %>
    
    <div class="form-group">
      <%= f.label 'Door', :class => 'control-label col-md-2' %>
      <div class="col-md-10">
        
        <div class="col-md-2">
          <label class="radio-inline">
            <% if Room.find(@reset.val_2).exits.exists?(:direction => 0) %>
              <% if Room.find(@reset.val_2).exits.where(:direction => 0).first.has_door? %>
                <%= f.radio_button :val_3, 0 %> North
              <% else %>
                <%= f.radio_button :val_3, 0, :disabled => true %> No North Door
              <% end %>
            <% else %>
              <%= f.radio_button :val_3, 0, :disabled => true %> No North Exit
            <% end %>
          </label>
        </div>
    
        <div class="col-md-2">
          <label class="radio-inline">
            <% if Room.find(@reset.val_2).exits.exists?(:direction => 1) %>
              <% if Room.find(@reset.val_2).exits.where(:direction => 1).first.has_door? %>
                <%= f.radio_button :val_3, 1 %> East
              <% else %>
                <%= f.radio_button :val_3, 1, :disabled => true %> No East Door
              <% end %>
            <% else %>
              <%= f.radio_button :val_3, 1, :disabled => true %> No East Exit
            <% end %>
          </label>
        </div>
        
        <div class="col-md-2">
          <label class="radio-inline">
            <% if Room.find(@reset.val_2).exits.exists?(:direction => 2) %>
              <% if Room.find(@reset.val_2).exits.where(:direction => 2).first.has_door? %>
                <%= f.radio_button :val_3, 2 %> South
              <% else %>
                <%= f.radio_button :val_3, 2, :disabled => true %> No South Door
              <% end %>
            <% else %>
              <%= f.radio_button :val_3, 2, :disabled => true %> No South Exit
            <% end %>
          </label>
        </div>
        
        <div class="col-md-2">
          <label class="radio-inline">
            <% if Room.find(@reset.val_2).exits.exists?(:direction => 3) %>
              <% if Room.find(@reset.val_2).exits.where(:direction => 3).first.has_door? %>
                <%= f.radio_button :val_3, 3 %> West
              <% else %>
                <%= f.radio_button :val_3, 3, :disabled => true %> No West Door
              <% end %>
            <% else %>
              <%= f.radio_button :val_3, 3, :disabled => true %> No West Exit
            <% end %>
          </label>
        </div>
        
        <div class="col-md-2">
          <label class="radio-inline">
            <% if Room.find(@reset.val_2).exits.exists?(:direction => 4) %>
              <% if Room.find(@reset.val_2).exits.where(:direction => 4).first.has_door? %>
                <%= f.radio_button :val_3, 4 %> Up
              <% else %>
                <%= f.radio_button :val_3, 4, :disabled => true %> No Up Door
              <% end %>
            <% else %>
              <%= f.radio_button :val_3, 4, :disabled => true %> No Up Exit
            <% end %>
          </label>
        </div>
        
        <div class="col-md-2">
          <label class="radio-inline">
            <% if Room.find(@reset.val_2).exits.exists?(:direction => 5) %>
              <% if Room.find(@reset.val_2).exits.where(:direction => 5).first.has_door? %>
                <%= f.radio_button :val_3, 5 %> Down
              <% else %>
                <%= f.radio_button :val_3, 5, :disabled => true %> No Down Door
              <% end %>
            <% else %>
              <%= f.radio_button :val_3, 5, :disabled => true %> No Down Exit
            <% end %>
          </label>
        </div>
        
      </div>
    </div>
    
    
    
    
    <!--<% if ( reset.reset_type == 'M' || reset.reset_type == 'Q' ) %><%= reset.reset_type %> <%= reset.val_1 %> <%= Mobile.find(reset.val_2).formal_vnum %> <%= reset.val_3 %> <%= Room.find(reset.val_4).formal_vnum %> * <%= reset.comment %><% end %><% if reset.reset_type == 'O' %><%= reset.reset_type %> <%= reset.val_1 %> <%= Obj.find(reset.val_2).formal_vnum %> <%= reset.val_3 %> <%= Room.find(reset.val_4).formal_vnum %> * <%= reset.comment %><% end %><% if reset.reset_type == 'D' %><%= reset.reset_type %> <%= reset.val_1 %> <%= Room.find(reset.val_2).formal_vnum %> <%= reset.val_3 %> <%= reset.val_4 %> * <%= reset.comment %><% end %><% if reset.reset_type == 'R' %><%= reset.reset_type %> <%= reset.val_1 %> <%= Room.find(reset.val_2).formal_vnum %> <%= reset.val_3 %> * <%= reset.comment %><% end %>-->
    
    
    
      <div class="form-group">
    <%= f.label :file, :class => 'control-label col-md-2' %>
    <div class="col-md-10">
      
        <%= f.file_field :file %>
        
        <span class="btn btn-default btn-file">
            Browse <input type="file">
        </span>
            
    </div>
  </div>
  
  
  
<!--
<div class="form-group">
  <%= f.label :file, :class => 'control-label col-md-2' %>
  <div class="col-md-10">
    <div class="input-group">
        <span class="input-group-btn">
            <span class="btn btn-primary btn-file">
                Browse <input type="file" multiple>
            </span>
        </span>
        <input type="text" class="form-control" readonly>
    </div>
  </div>
</div>

<div class="form-group">
  <div class='col-md-offset-2 col-md-10'>
    <%= f.submit nil, :class => 'btn btn-primary' %>
    <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                areas_path, :class => 'btn btn-default' %>
  </div>
</div>
-->




  def self.import(file, user_id)

    range_low ||= 0
    range_high ||= 0
    author ||= ''
    name ||= ''
    flags ||= 0
    
    lines = file.tempfile.readlines.map(&:chomp) #readlines from file & removes newline symbol
    lines.each do |l| 
      if (l.include?("#AREA") && l.include?("~")) # FORMAT 1 Area Header
        m = l.match(/\{(.*)\} (........) (.*)~\s*F (\d+)/)

          if m
            author = m[2].strip
            name = m[3].strip
            flags = m[4].to_i
    
            if m[1].match(/(\d) (\d)/)
              range = m[1].match(/(\d+) (\d+)/)
                range_low = range[1].to_i
                range_high = range[2].to_i
            else
              if m[1].match(/ALL/)
                range_low = 1
                range_high = 50
              end
              if m[1].match(/HARD/)
                range_low = 50
                range_high = 50
              end
            end
          end

      end
    end