{"changed":true,"filter":false,"title":"Search Results","tooltip":"/.c9/searchresults","value":"Searching for \u0001preview\u0001 in\u0001project files (excludes .gitignore'd files)\u0001 (Found 4 matches in 2 files)\n\n/app/controllers/areas_controller.rb:\n\t23:     if params[:preview]\n\t24:       render('areas/areapreview')\n\n/app/views/areas/show.html.erb:\n\t267:       <%= link_to 'Preview', area_path(@area, :preview => true), :target => \"_blank\", :class => 'btn btn-success'  %>\n\nFound 4 matches in 2 files \n\n","undoManager":{"mark":-2,"position":13,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":[" "],"id":1},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "]},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001direction\u0001 in\u0001/\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["/app/controllers/exits_controller.rb:","\t34:                                         :direction => params[:dir]","\t42:                                               :direction => opposite_dir( params[:dir].to_i )","\t51:       @exit.direction = params[:dir]","\t89:       if $far_room.exits.exists?(:direction => opposite_dir( @exit.direction ))","\t90:         $far_exit = $far_room.exits.where(:direction => opposite_dir( @exit.direction )).first","\t107:                                 :direction => opposite_dir( @exit.direction ),","\t115:         @exit.direction = params[:direction]","\t158:       if $far_room.exits.exists?(:direction => opposite_dir( @exit.direction ))","\t159:         $far_exit = $far_room.exits.where(:direction => opposite_dir( @exit.direction )).first","\t176:                                 :direction => opposite_dir( @exit.direction ),","\t215:       params.require(:exit).permit(:direction, :description, :keywords, ","",""],"id":2}],[{"start":{"row":15,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["/app/models/_import.rb:","\t291:     exit_info[\"direction\"]   = m[1].to_i","","/app/models/exit.rb:","\t9:       record.errors[:base] << \"Look only exit directions cannot be combined with Local or External Exit Vnums.\"","\t13:       record.errors[:base] << \"Look only exit directions must be used if a Local or External Exit Vnum is not specified.\"","\t25:   validates :direction, :numericality => { only_integer: true,","\t30:                                    message: \"No duplicate exit directions allowed.\" }","\t48:     if ((self.exittype == 3) and !(self.direction == 5))  # is a trap, but not a down exit","\t67:   def direction_word","\t68:     return num_to_dir(self.direction)","\t149:       if (self.destination.exits.where(:direction => opposite_dir(self.direction)).count > 0 && ","\t150:           self.destination.exits.where(:direction => opposite_dir(self.direction)).first.exit_room_id == self.room.id )","\t163:       $reciprocal_exit = self.destination.exits.where(:direction => opposite_dir(self.direction)).first","\t178:       if (self.destination.exits.where(:direction => opposite_dir(self.direction)).count > 0 && ","\t179:           self.destination.exits.where(:direction => opposite_dir(self.direction)).first.exit_room_id == self.room.id )","\t205:     $output = 'D 0 ' + self.room.formal_vnum.to_s + ' ' + self.direction.to_s + ' ' + self.reset.to_s + ' * '","\t212:     $desc = \"Set \" + self.direction_word.downcase + \" door at '\" + self.room.name + \"' to \" + self.reset_desc","\t225:     self.direction ||= 0","","/app/models/reset.rb:","\t41:     $comment = \"Set \" + self.reset_door_direction + \" door at '\" + room_info(self.val_2, 'name') + \"' to \" + door_state(self.val_4) if self.reset_type == 'D'","\t99:   def reset_door_direction","\t101:          Room.find(self.val_2).exits.exists?(:direction => self.val_3) )","\t103:       if Room.find(self.val_2).exits.where(:direction => self.val_3).first.has_door? ","","/app/models/room.rb:","\t163:       if exit.direction == i","","/app/models/trigger.rb:","\t33:     $output = \"#{self.trigger_type} #{self.exit.room.formal_vnum} #{self.exit.direction} #{self.name}\"","\t52:     $comment = \"#{self.exit.room.name} (#{exit.direction_word})\"","",""],"id":3}],[{"start":{"row":48,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["/app/views/exits/_exitblock.html.erb:","\t1: D<%= exit.direction %>","",""],"id":4}],[{"start":{"row":51,"column":0},"end":{"row":76,"column":0},"action":"insert","lines":["/app/views/exits/_form.html.erb:","\t17:     <%= f.label :direction, :class => 'control-label col-md-2' %> ","\t19:     <%= f.select(:direction, options_for_select(","\t27:           ], @exit.direction","\t48:             ['No Exit (For Wall/Direction Descriptions)', -1],","\t133:         <input type=\"radio\" name=\"ExitDestinationRadioOptions\" id=\"NoExitVnumRadio\" value=\"3\" <%= \"checked\" if $NoExitVnumRadio %>> No Exit (Look direction)","","/app/views/exits/edit.html.erb:","\t8:         <%= @exit.direction_word %>","","/app/views/exits/index.html.erb:","\t9:       <th><%= model_class.human_attribute_name(:direction) %></th>","\t25:           <td><%= exit.direction %></td>","","/app/views/exits/index.json.jbuilder:","\t2:   json.extract! exit, :id, :direction, :description, :keywords, :exittype, :keyvnum, :exit_room_id, :name, :room_id","","/app/views/exits/show.html.erb:","\t7:         <%= @exit.direction_word %>","\t13:           <strong>Direction:</strong>","\t17:             <%= @exit.direction %> / <%= @exit.direction_word %>","","/app/views/exits/show.json.jbuilder:","\t1: json.extract! @exit, :id, :direction, :description, :keywords, :exittype, :keyvnum, :exit_room_id, :name, :room_id, :created_at, :updated_at","",""],"id":5}],[{"start":{"row":76,"column":0},"end":{"row":79,"column":0},"action":"insert","lines":["/app/views/resets/_otherform.html.erb:","\t87:       <%= f.label :val_3, 'Door direction', :class => 'control-label col-md-2' %>","",""],"id":6}],[{"start":{"row":79,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["/app/views/resets/_resetsblock.html.erb:","\t13: <% room.exits.order(:direction).each do |exit| %>","",""],"id":7},{"start":{"row":82,"column":0},"end":{"row":89,"column":0},"action":"insert","lines":["/app/views/resets/show.html.erb:","\t42:           <%= 'Door direction:' if @reset.reset_type == 'D' %>","\t49:           <%= @reset.reset_door_direction if @reset.reset_type == 'D' %>","","/app/views/room_specials/_form.html.erb:","\t143:       <%= f.label :extended_value_1, 'Door direction', :id => 'extended_value_1_label', :class => 'control-label col-md-2' %>","",""]},{"start":{"row":89,"column":0},"end":{"row":93,"column":0},"action":"insert","lines":["/app/views/rooms/_exitmaproom.html.erb:","\t3:     <% $this_exit = @room.exits.where(direction: dir).first %>","\t10:           <%= $this_exit.direction_word %> to <%= $this_exit.destination.vnum %><br>","",""]},{"start":{"row":93,"column":0},"end":{"row":106,"column":0},"action":"insert","lines":["/app/views/rooms/_exitstable.html.erb:","\t6:                 <th>Direction</th>","\t21:               <% @room.exits.order(:direction).each do |exit| %>","\t23:                   <td><%= exit.direction_word %></td>","","/app/views/rooms/_mudroomview.html.erb:","\t5: <font color=red>[</font><font color=darkred>Exits:<% if @room.exits.count < 1 %> <font color=white>none</font><% end %><% @room.exits.order(:direction).each do |exit| %> <u><% ","\t6: if exit.destination_exists? %><%= link_to exit.direction_word.downcase, area_room_path(@area, exit.destination), {:style => 'color: darkred'} %><% else %><%= ","\t7: link_to exit.direction_word.downcase, edit_area_room_exit_path(@area, @room, exit), {:style => 'color: darkred'} %><% end %></u><% end %></font><font color=red>]</font>","","/app/views/rooms/_roomblock.html.erb:","\t6: <% room.exits.order(:direction).each do |exit| %>","",""]}],[{"start":{"row":106,"column":0},"end":{"row":112,"column":0},"action":"insert","lines":["/app/views/triggers/_triggersblock.html.erb:","\t3:   <% room.exits.order(:direction).each do |exit| %>","","/app/views/triggers/edit.html.erb:","\t8:         <%= link_to \"Exit: #{@exit.direction_word}\", area_room_exit_path(@area, @room, @exit) %> /","",""],"id":8},{"start":{"row":112,"column":0},"end":{"row":121,"column":0},"action":"insert","lines":["/app/views/triggers/index.html.erb:","\t23:               <td><%= $exit.direction_word %></td>","","/app/views/triggers/new.html.erb:","\t8:         <%= link_to \"Exit: #{@exit.direction_word}\", area_room_exit_path(@area, @room, @exit) %> /","","/app/views/triggers/show.html.erb:","\t6:       <%= link_to \"Exit: #{@exit.direction_word}\", area_room_exit_path(@area, @room, @exit) %> /","",""]},{"start":{"row":121,"column":0},"end":{"row":124,"column":0},"action":"insert","lines":["/db/schema.rb:","\t58:     t.integer  \"direction\"","",""]},{"start":{"row":124,"column":0},"end":{"row":125,"column":0},"action":"insert","lines":["/db/migrate/20150117051335_create_exits.rb:",""]},{"start":{"row":125,"column":0},"end":{"row":127,"column":0},"action":"insert","lines":["\t4:       t.integer :direction","",""]}],[{"start":{"row":127,"column":0},"end":{"row":128,"column":0},"action":"insert","lines":["",""],"id":9}],[{"start":{"row":0,"column":0},"end":{"row":128,"column":0},"action":"remove","lines":["Searching for \u0001direction\u0001 in\u0001/\u0001","","/app/controllers/exits_controller.rb:","\t34:                                         :direction => params[:dir]","\t42:                                               :direction => opposite_dir( params[:dir].to_i )","\t51:       @exit.direction = params[:dir]","\t89:       if $far_room.exits.exists?(:direction => opposite_dir( @exit.direction ))","\t90:         $far_exit = $far_room.exits.where(:direction => opposite_dir( @exit.direction )).first","\t107:                                 :direction => opposite_dir( @exit.direction ),","\t115:         @exit.direction = params[:direction]","\t158:       if $far_room.exits.exists?(:direction => opposite_dir( @exit.direction ))","\t159:         $far_exit = $far_room.exits.where(:direction => opposite_dir( @exit.direction )).first","\t176:                                 :direction => opposite_dir( @exit.direction ),","\t215:       params.require(:exit).permit(:direction, :description, :keywords, ","","/app/models/_import.rb:","\t291:     exit_info[\"direction\"]   = m[1].to_i","","/app/models/exit.rb:","\t9:       record.errors[:base] << \"Look only exit directions cannot be combined with Local or External Exit Vnums.\"","\t13:       record.errors[:base] << \"Look only exit directions must be used if a Local or External Exit Vnum is not specified.\"","\t25:   validates :direction, :numericality => { only_integer: true,","\t30:                                    message: \"No duplicate exit directions allowed.\" }","\t48:     if ((self.exittype == 3) and !(self.direction == 5))  # is a trap, but not a down exit","\t67:   def direction_word","\t68:     return num_to_dir(self.direction)","\t149:       if (self.destination.exits.where(:direction => opposite_dir(self.direction)).count > 0 && ","\t150:           self.destination.exits.where(:direction => opposite_dir(self.direction)).first.exit_room_id == self.room.id )","\t163:       $reciprocal_exit = self.destination.exits.where(:direction => opposite_dir(self.direction)).first","\t178:       if (self.destination.exits.where(:direction => opposite_dir(self.direction)).count > 0 && ","\t179:           self.destination.exits.where(:direction => opposite_dir(self.direction)).first.exit_room_id == self.room.id )","\t205:     $output = 'D 0 ' + self.room.formal_vnum.to_s + ' ' + self.direction.to_s + ' ' + self.reset.to_s + ' * '","\t212:     $desc = \"Set \" + self.direction_word.downcase + \" door at '\" + self.room.name + \"' to \" + self.reset_desc","\t225:     self.direction ||= 0","","/app/models/reset.rb:","\t41:     $comment = \"Set \" + self.reset_door_direction + \" door at '\" + room_info(self.val_2, 'name') + \"' to \" + door_state(self.val_4) if self.reset_type == 'D'","\t99:   def reset_door_direction","\t101:          Room.find(self.val_2).exits.exists?(:direction => self.val_3) )","\t103:       if Room.find(self.val_2).exits.where(:direction => self.val_3).first.has_door? ","","/app/models/room.rb:","\t163:       if exit.direction == i","","/app/models/trigger.rb:","\t33:     $output = \"#{self.trigger_type} #{self.exit.room.formal_vnum} #{self.exit.direction} #{self.name}\"","\t52:     $comment = \"#{self.exit.room.name} (#{exit.direction_word})\"","","/app/views/exits/_exitblock.html.erb:","\t1: D<%= exit.direction %>","","/app/views/exits/_form.html.erb:","\t17:     <%= f.label :direction, :class => 'control-label col-md-2' %> ","\t19:     <%= f.select(:direction, options_for_select(","\t27:           ], @exit.direction","\t48:             ['No Exit (For Wall/Direction Descriptions)', -1],","\t133:         <input type=\"radio\" name=\"ExitDestinationRadioOptions\" id=\"NoExitVnumRadio\" value=\"3\" <%= \"checked\" if $NoExitVnumRadio %>> No Exit (Look direction)","","/app/views/exits/edit.html.erb:","\t8:         <%= @exit.direction_word %>","","/app/views/exits/index.html.erb:","\t9:       <th><%= model_class.human_attribute_name(:direction) %></th>","\t25:           <td><%= exit.direction %></td>","","/app/views/exits/index.json.jbuilder:","\t2:   json.extract! exit, :id, :direction, :description, :keywords, :exittype, :keyvnum, :exit_room_id, :name, :room_id","","/app/views/exits/show.html.erb:","\t7:         <%= @exit.direction_word %>","\t13:           <strong>Direction:</strong>","\t17:             <%= @exit.direction %> / <%= @exit.direction_word %>","","/app/views/exits/show.json.jbuilder:","\t1: json.extract! @exit, :id, :direction, :description, :keywords, :exittype, :keyvnum, :exit_room_id, :name, :room_id, :created_at, :updated_at","","/app/views/resets/_otherform.html.erb:","\t87:       <%= f.label :val_3, 'Door direction', :class => 'control-label col-md-2' %>","","/app/views/resets/_resetsblock.html.erb:","\t13: <% room.exits.order(:direction).each do |exit| %>","","/app/views/resets/show.html.erb:","\t42:           <%= 'Door direction:' if @reset.reset_type == 'D' %>","\t49:           <%= @reset.reset_door_direction if @reset.reset_type == 'D' %>","","/app/views/room_specials/_form.html.erb:","\t143:       <%= f.label :extended_value_1, 'Door direction', :id => 'extended_value_1_label', :class => 'control-label col-md-2' %>","","/app/views/rooms/_exitmaproom.html.erb:","\t3:     <% $this_exit = @room.exits.where(direction: dir).first %>","\t10:           <%= $this_exit.direction_word %> to <%= $this_exit.destination.vnum %><br>","","/app/views/rooms/_exitstable.html.erb:","\t6:                 <th>Direction</th>","\t21:               <% @room.exits.order(:direction).each do |exit| %>","\t23:                   <td><%= exit.direction_word %></td>","","/app/views/rooms/_mudroomview.html.erb:","\t5: <font color=red>[</font><font color=darkred>Exits:<% if @room.exits.count < 1 %> <font color=white>none</font><% end %><% @room.exits.order(:direction).each do |exit| %> <u><% ","\t6: if exit.destination_exists? %><%= link_to exit.direction_word.downcase, area_room_path(@area, exit.destination), {:style => 'color: darkred'} %><% else %><%= ","\t7: link_to exit.direction_word.downcase, edit_area_room_exit_path(@area, @room, exit), {:style => 'color: darkred'} %><% end %></u><% end %></font><font color=red>]</font>","","/app/views/rooms/_roomblock.html.erb:","\t6: <% room.exits.order(:direction).each do |exit| %>","","/app/views/triggers/_triggersblock.html.erb:","\t3:   <% room.exits.order(:direction).each do |exit| %>","","/app/views/triggers/edit.html.erb:","\t8:         <%= link_to \"Exit: #{@exit.direction_word}\", area_room_exit_path(@area, @room, @exit) %> /","","/app/views/triggers/index.html.erb:","\t23:               <td><%= $exit.direction_word %></td>","","/app/views/triggers/new.html.erb:","\t8:         <%= link_to \"Exit: #{@exit.direction_word}\", area_room_exit_path(@area, @room, @exit) %> /","","/app/views/triggers/show.html.erb:","\t6:       <%= link_to \"Exit: #{@exit.direction_word}\", area_room_exit_path(@area, @room, @exit) %> /","","/db/schema.rb:","\t58:     t.integer  \"direction\"","","/db/migrate/20150117051335_create_exits.rb:","\t4:       t.integer :direction","","",""],"id":10},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001preview\u0001 in\u0001project files (excludes .gitignore'd files)\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/app/controllers/areas_controller.rb:",""],"id":11},{"start":{"row":3,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["\t23:     if params[:preview]","\t24:       render('areas/areapreview')","",""]}],[{"start":{"row":6,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["/app/views/areas/show.html.erb:","\t267:       <%= link_to 'Preview', area_path(@area, :preview => true), :target => \"_blank\", :class => 'btn btn-success'  %>","",""],"id":12}],[{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["Found 4 matches in 2 files ",""],"id":13}],[{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":14},{"start":{"row":0,"column":71},"end":{"row":0,"column":100},"action":"insert","lines":[" (Found 4 matches in 2 files)"]}]]},"ace":{"folds":[],"customSyntax":"c9search","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":8,"column":0},"end":{"row":8,"column":0},"isBackwards":false},"options":{"tabSize":4,"useSoftTabs":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1460928671435}