{"changed":true,"filter":false,"title":"exits_controller.rb","tooltip":"/app/controllers/exits_controller.rb","value":"class ExitsController < ApplicationController\n  before_action :set_exit, only: [:show, :edit, :update, :destroy]\n  before_action :set_room, only: [:index, :show, :new, :edit, :create, :update, :destroy]\n  before_action :set_area, only: [:index, :show, :new, :edit, :create, :update, :destroy]\n  \n  respond_to :html\n\n  def index\n    @exits = @room.exits\n    respond_with(@exits)\n  end\n\n  def show\n    respond_with(@exit)\n  end\n\n  def new\n#    @exit = Exit.new\n    @exit = @room.exits.build\n  end\n\n  def edit\n  end\n\n  def create\n    @exit = @room.exits.create(exit_params)\n    if @exit.save\n      redirect_to area_room_exit_path(@area, @room, @exit), notice: 'Room Exit was sucessfully created.'\n    else\n      render action: 'new'\n    end\n  end\n\n  def update\n    if @exit.update(exit_params)\n      redirect_to area_room_exit_path(@area, @room, @exit), notice: 'Room Exit was sucessfully updated.'\n    else\n      render action: 'edit'\n    end \n  end\n\n  def destroy\n    @exit.destroy\n    if @exit.save\n      redirect_to area_room_exits_path(@area, @room), notice: 'Room was sucessfully deleted.'\n    else\n      redirect_to area_room_exits_path(@area, @room), notice: 'Something went wrong.'\n    end\n  end\n\n  private\n    def set_exit\n      @exit = Exit.find(params[:id])\n    end\n    \n    def set_room\n      @room = Room.find(params[:room_id])\n    end\n    \n    def set_area\n      @area = Area.find(@room.area.id)\n    end\n    \n    def exit_params\n      params.require(:exit).permit(:direction, :description, :keywords, :exittype, :keyvnum, :exitto, :name, :room_id)\n    end\nend\n","undoManager":{"mark":-1,"position":1,"stack":[[{"group":"doc","deltas":[{"start":{"row":19,"column":0},"end":{"row":19,"column":23},"action":"remove","lines":["    respond_with(@exit)"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":29},"end":{"row":19,"column":0},"action":"remove","lines":["",""]}]}]]},"ace":{"folds":[],"scrolltop":815.5000143051147,"scrollleft":0,"selection":{"start":{"row":9,"column":24},"end":{"row":9,"column":24},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":55,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1421475356709}