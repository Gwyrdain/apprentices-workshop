{"filter":false,"title":"_import.rb","tooltip":"/app/models/_import.rb","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":215,"column":3},"end":{"row":216,"column":0},"action":"insert","lines":["",""],"id":666}],[{"start":{"row":216,"column":0},"end":{"row":217,"column":0},"action":"insert","lines":["",""],"id":667}],[{"start":{"row":217,"column":0},"end":{"row":286,"column":3},"action":"insert","lines":["def parse_rooms(rooms_block)","  rooms_info = Hash.new","  i = 1","  ","  rooms = rooms_block.split(\"#\").map(&:strip)","  ","  rooms.each do |room|","    m = room.match(/^(\\d+)\\n(.*)~\\n([^~]*)\\n~\\n(\\d*) ([0-9|]*) (\\d*)/)","    room_info = Hash.new","    room_info[\"vnum\"]        = m[1].to_i","    room_info[\"name\"]        = m[2].strip","    room_info[\"description\"] = m[3].strip","    room_info[\"area_number\"] = m[4].to_i","    room_info[\"room_flags\"]  = read_flags( m[5].strip )","    room_info[\"terrain\"]     = m[6].to_i","    ","    if room.match(/^E$/) # any extra descriptions?","      room_info[\"extra_descs\"] = parse_extra_descs( room.split(/^E$/).map(&:strip) )","    end","    ","    if room.match(/^D\\d$/) # any exits?","      #room_info[\"exits\"] = parse_exits( room.split(/^D$/).map(&:strip) )","      ","      room_info[\"exits\"] = parse_exits( room.match(/^D\\d\\n[^#]*^S$/)[0] ) # Parse from 1st exit to end-of-room","    end","    ","    rooms_info[i] = room_info","    i = i + 1","  end","  ","  return rooms_info","end","","def parse_exits(exits_block)","  exits_block.gsub!(/^D(\\d)$/,'Exit: \\1')","  exits_block.gsub!(/^E\\n^.*~\\n[^~]*~/, '') # remove extra descriptions","  exits_block.gsub!(/^S$/, '') # remove trailing S","  ","  exits_list = exits_block.split(/^Exit: /).map(&:strip)","  exits_list.shift","  ","  exits_info = Hash.new","  i = 1","  ","  exits_list.each do |exit_data|","    exit_info = Hash.new","    ","    m = exit_data.match(/^(\\d)$/)","    exit_info[\"direction\"]   = m[1].to_i","    ","    m = exit_data.match(/\\d\\n([^~]*)~/)","    exit_info[\"description\"] = m[1].strip","  ","    m = exit_data.match(/^(.*)~\\n(\\d*) (\\d*) (\\d*)$/)","    exit_info[\"keywords\"]    = ( m[1].strip == nil ? \"\" : m[1].strip )","    exit_info[\"exittype\"]    = m[2].to_i","    exit_info[\"key_vnum\"]    = m[3].to_i","    exit_info[\"exit_vnum\"]   = m[4].to_i","    ","    if exit_data.match(/^O$/)","      m = exit_data.match(/^O\\n(.*)~/)","      exit_info[\"name\"] = m[1].strip","    end","    ","    exits_info[i] = exit_info","    i = i + 1","  end","  ","  return exits_info","end"],"id":668}]]},"ace":{"folds":[],"scrolltop":3710,"scrollleft":0,"selection":{"start":{"row":286,"column":3},"end":{"row":286,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":264,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1460864340676,"hash":"31e96bf44119256b45d98fb32a2468951763075e"}