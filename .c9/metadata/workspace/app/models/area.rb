{"changed":true,"filter":false,"title":"area.rb","tooltip":"/app/models/area.rb","value":"require_relative '_import'\nrequire_relative '_translate'\nrequire_relative '_lookup'\n\nclass Area < ActiveRecord::Base\n  belongs_to :user\n  has_many :helps, dependent: :destroy\n  has_many :rooms, dependent: :destroy\n  has_many :objs, dependent: :destroy\n  has_many :mobiles, dependent: :destroy\n  has_many :area_strings, dependent: :destroy\n  has_many :resets, dependent: :destroy\n  has_many :shares, dependent: :destroy\n  \n  has_many :applies, through: :objs\n  has_many :oxdescs, through: :objs\n  has_many :shops, through: :mobiles\n  has_many :specials, through: :mobiles\n  has_many :exits, through: :rooms\n  has_many :rxdescs, through: :rooms\n  has_many :room_specials, through: :rooms\n  has_many :sub_resets, through: :resets\n  has_many :triggers, through: :rooms, :source => :triggers\n  \n  include Bitfields\n  \n  bitfield :misc_flags,\n                    2**0 => :share_publicly,\n                    2**1 => :use_rulers,\n                    2**2 => :show_formatted_blocks\n  \n  bitfield  :flags, 2**0 => :manmade,  # Hex 1\n                    2**1 => :city,     # Hex 2\n                    2**2 => :forest,   # Hex 4\n                    2**3 => :limited,  # Hex 8\n                    2**4 => :aerial,   # Hex 10\n                    2**5 => :reserved, # Hex 20\n                    2**6 => :arena,    # Hex 40\n                    2**7 => :quest,    # Hex 80\n                    2**8 => :novnum,   # Hex 100\n                    2**9 => :no_save   # Hex 200\n                    \n  bitfield :default_room_flags, \n                2**0 =>  :dark,          # Dec:          1 / Hex:         1\n                2**1 =>  :no_sleep,      # Dec:          2 / Hex:         2\n                2**2 =>  :no_mob,        # Dec:          4 / Hex:         4\n                2**3 =>  :indoors,       # Dec:          8 / Hex:         8\n#               2**4 =>  :flag,          # Dec:         16 / Hex:        10\n                2**5 =>  :foggy,         # Dec:         32 / Hex:        20\n                2**6 =>  :fire,          # Dec:         64 / Hex:        40\n                2**7 =>  :lava,          # Dec:        128 / Hex:        80\n#               2**8 =>  :flag,          # Dec:        256 / Hex:       100\n                2**9 =>  :private_room,  # Dec:        512 / Hex:       200\n                2**10 => :peaceful,      # Dec:       1024 / Hex:       400\n                2**11 => :solitary,      # Dec:       2048 / Hex:       800\n#               2**12 => :flag,          # Dec:       4096 / Hex:      1000\n                2**13 => :no_recall,     # Dec:       8192 / Hex:      2000\n                2**14 => :no_steal,      # Dec:      16384 / Hex:      4000\n                2**15 => :notrans,       # Dec:      32768 / Hex:      8000\n                2**16 => :no_spell,      # Dec:      65536 / Hex:     10000\n                2**17 => :seafloor,      # Dec:     131072 / Hex:     20000\n                2**18 => :no_fly,        # Dec:     262144 / Hex:     40000\n                2**19 => :holy_ground,   # Dec:     524288 / Hex:     80000\n                2**20 => :fly_ok,        # Dec:    1048576 / Hex:    100000\n                2**21 => :no_quest,      # Dec:    2097152 / Hex:    200000\n                2**22 => :no_item,       # Dec:    4194304 / Hex:    400000\n                2**23 => :no_vnum        # Dec:    8388608 / Hex:    800000\n#               2**24 => :flag,          # Dec:   16777216 / Hex:   1000000\n#               2**25 => :flag,          # Dec:   33554432 / Hex:   2000000\n#               2**26 => :flag,          # Dec:   67108864 / Hex:   4000000\n#               2**27 => :flag,          # Dec:  134217728 / Hex:   8000000\n#               2**28 => :flag,          # Dec:  268435456 / Hex:  10000000\n#               2**29 => :flag,          # Dec:  536870912 / Hex:  20000000\n#               2**30 => :flag,          # Dec: 1073741824 / Hex:  40000000\n#               2**31 => :flag,          # Dec: 2147483648 / Hex:  80000000\n#               2**32 => :flag,          # Dec: 4294967296 / Hex: 100000000\n\n  validates :name, length: { in: 1..20 }\n  validates :author, length: { in: 1..75 }\n\n  validates :vnum_qty, numericality: { only_integer: true, greater_than_or_equal_to: 0 }\n  validates :lowlevel, numericality: { only_integer: true, greater_than: 0, less_than: 51  }\n  validates :highlevel, numericality: { only_integer: true, greater_than: 0, less_than: 51  }\n  validates :default_terrain, numericality: { only_integer: true, greater_than_or_equal_to: 0 }\n  validates :area_number,  numericality: { only_integer: true, greater_than: 0 }\n  validates :user_id,  numericality: { only_integer: true, greater_than: 0 }\n  \n  validate do |area|\n    area.errors.add :base, \"Name may only contain US-ASCII characters.  Invalid characters: \" + area.name.remove(/[\\x0A\\x0D -~]/) if area.name.remove(/[\\x0A\\x0D -~]/).length > 0\n    area.errors.add :base, \"Author may only contain US-ASCII characters.  Invalid characters: \" + area.author.remove(/[\\x0A\\x0D -~]/) if area.author.remove(/[\\x0A\\x0D -~]/).length > 0\n  end\n\n  before_create :default_values\n  def default_values\n    self.flags ||= 0\n    self.vnum_qty ||= 100\n    self.misc_flags ||= 0\n    self.default_terrain ||= 0\n    self.default_room_flags ||= 0\n    return true\n  end\n  \n  def self.import(file, user_id)\n\n    range_low ||= 0\n    range_high ||= 0\n    author ||= ''\n    name ||= ''\n    flags ||= 0\n    \n    area_file = file.read.encode(universal_newline: true).gsub(/\\s*\\n/,\"\\n\")\n    #lines = area_file.readlines.map(&:chomp) #readlines from file & removes newline symbol\n\n    header_v1 = 'No Format 1 Area Header'\n    header_v2 = 'No Format 2 Area Header'\n    mobiles_block = 'No Mobiles Block'\n    objects_block = 'No Objects Block'\n    rooms_block = 'No Rooms Block'\n    strings_block = 'No Strings Block'\n    resets_block = 'No Resets Block'\n    shops_block = 'No Shops Block'\n    specials_block = 'No Specials Block'\n    rspecs_block = 'No Room Specials Block'\n    triggers_block = 'No Triggers Block'\n    header_info = ''\n    \n    # Parse v1 Header Info\n    if area_file.match(/^#AREA.*~.*?\\n/)\n      header_v1 = area_file.match(/^#AREA.*~.*?\\n/)\n      header_info = parse_area_header_v1(header_v1[0], user_id)\n    end\n    # Parse v2 Header Info\n    if area_file.match(/^#AREA.*?\\nEnd/m)\n      header_v2 = area_file.match(/^#AREA.*?\\nEnd/m)\n      header_info = parse_area_header_v2(header_v2[0], user_id)\n    end\n    # Parse the Mobiles Block\n    if area_file.match(/^#MOBILES\\n#(.*?)\\n#0/m)\n      mobiles_block = parse_mobiles( area_file.match(/^#MOBILES\\n#(.*?)\\n#0/m)[1] )\n    end\n    # Parse the Objects Block\n    if area_file.match(/^#OBJECTS\\n#.*?\\n#0/m)\n      objects_block = parse_objects( area_file.match(/^#OBJECTS\\n#(.*?)\\n#0/m)[1] )\n    end\n    \n    \n    \n    if area_file.match(/^#ROOMS\\n#.*?\\n#0/m)\n      rooms_block = area_file.match(/^#ROOMS\\n#(.*?)\\n#0/m)\n    end\n    if area_file.match(/^#STRINGS\\n#.*?\\n#0/m)\n      strings_block = area_file.match(/^#STRINGS\\n#(.*?)\\n#0/m)\n    end\n    if area_file.match(/^#RESETS\\n.*?\\nS/m)\n      resets_block = area_file.match(/^#RESETS\\n.*?\\nS/m)\n    end\n    if area_file.match(/^#SHOPS\\n.*?\\n0/m)\n      shops_block = area_file.match(/^#SHOPS\\n.*?\\n0/m)\n    end\n    if area_file.match(/^#SPECIALS\\n.*?\\nS/m)\n      specials_block = area_file.match(/^#SPECIALS\\n.*?\\nS/m)\n    end\n    if area_file.match(/^#RSPECS\\n.*?\\nS/m)\n      rspecs_block = area_file.match(/^#RSPECS\\n.*?\\nS/m)\n    end\n    if area_file.match(/^#TRIGGERS\\n.*?\\nS/m)\n      triggers_block = area_file.match(/^#TRIGGERS\\n.*?\\nS/m)\n    end\n\n    return \"#{header_info}<hr>#{header_v1}<hr>#{header_v2}<hr>#{mobiles_block}<hr>#{objects_block}<hr>\" <<\n           \"#{rooms_block}<hr>#{strings_block}<hr>#{resets_block}<hr>#{shops_block}\" <<\n           \"#{specials_block}<hr>#{rspecs_block}<hr>#{triggers_block}<hr><b>EOF</b>\"\n\n  end\n  \n  def nextroomvnum\n    $i = 0\n    while self.rooms.exists?(:vnum => $i)  do\n        $i +=1\n    end\n    return $i\n  end\n  \n  def nextobjvnum\n    $i = 0\n    while self.objs.exists?(:vnum => $i)  do\n        $i +=1\n    end\n    return $i\n  end\n\n  def nextmobilevnum\n    $i = 0\n    while self.mobiles.exists?(:vnum => $i)  do\n        $i +=1\n    end\n    return $i\n  end\n\n  def nextarea_stringvnum\n    $i = 0\n    while self.area_strings.exists?(:vnum => $i)  do\n        $i +=1\n    end\n    return $i\n  end\n  \n  def flags_as_hex\n    #return self.flags.to_s(16).upper ... trying new\n    return \"%X\" % self.flags\n  end\n  \n  def flags_as_string\n    $flags_string = ''\n    $flags_string = $flags_string + ' MANMADE' if self.manmade\n    $flags_string = $flags_string + ' CITY' if self.city\n    $flags_string = $flags_string + ' FOREST' if self.forest\n    $flags_string = $flags_string + ' LIMITED' if self.limited\n    $flags_string = $flags_string + ' AERIAL' if self.aerial\n    $flags_string = $flags_string + ' RESERVED' if self.reserved\n    $flags_string = $flags_string + ' ARENA' if self.arena\n    $flags_string = $flags_string + ' QUEST' if self.quest\n    $flags_string = $flags_string + ' NOVNUM' if self.novnum\n    $flags_string = $flags_string + ' NOSAVE' if self.no_save\n    return $flags_string\n  end\n  \n  def door_reset_count\n    i = 0\n    self.rooms.each do |room|\n\n      room.exits.each do |exit|\n        i = i + 1 if exit.has_reset?\n      end\n\n    end\n    return i\n  end\n  \n  def shared_with?(this_user)\n#   if ( this_user.id == self.user_id || self.share_publicly? || this_user.is_admin? || self.shares.exists?(:user_id => this_user.id ) )\n    if self.shares.exists?(:user_id => this_user.id )\n      return true\n    else\n      return false\n    end\n  end\n\n  def my_area\n    return self\n  end\n  \n  def last_updated?\n    $latest_update = self.updated_at\n    $update = $latest_update\n    \n    $update = self.area_strings.order(updated_at: :desc).first.updated_at if self.area_strings.count > 0\n    $latest_update = $update           if $update > $latest_update\n    \n    $update = self.helps.order(updated_at: :desc).first.updated_at if self.helps.count > 0\n    $latest_update = $update           if $update > $latest_update\n    \n    $update = self.rooms.order(updated_at: :desc).first.updated_at if self.rooms.count > 0\n    $latest_update = $update           if $update > $latest_update\n    \n    $update = self.mobiles.order(updated_at: :desc).first.updated_at if self.mobiles.count > 0\n    $latest_update = $update           if $update > $latest_update\n    \n    $update = self.objs.order(updated_at: :desc).first.updated_at if self.objs.count > 0\n    $latest_update = $update           if $update > $latest_update\n    \n    $update = self.resets.order(updated_at: :desc).first.updated_at if self.resets.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.shops.order(updated_at: :desc).first.updated_at if self.shops.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.specials.order(updated_at: :desc).first.updated_at if self.specials.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.room_specials.order(updated_at: :desc).first.updated_at if self.room_specials.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.sub_resets.order(updated_at: :desc).first.updated_at if self.sub_resets.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.triggers.order(updated_at: :desc).first.updated_at if self.triggers.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.applies.order(updated_at: :desc).first.updated_at if self.applies.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.exits.order(updated_at: :desc).first.updated_at if self.exits.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.rxdescs.order(updated_at: :desc).first.updated_at if self.rxdescs.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.oxdescs.order(updated_at: :desc).first.updated_at if self.oxdescs.count > 0\n    $latest_update = $update           if $update > $latest_update\n    \n    return $latest_update\n  end\n  \n  def self.import(file, user_id)\n\n    range_low ||= 0\n    range_high ||= 0\n    author ||= ''\n    name ||= ''\n    flags ||= 0\n    \n    area_file = file.read.encode(universal_newline: true).gsub(/\\s*\\n/,\"\\n\")\n    #lines = area_file.readlines.map(&:chomp) #readlines from file & removes newline symbol\n\n    header_v1 = 'No Format 1 Area Header'\n    header_v2 = 'No Format 2 Area Header'\n    mobiles_block = 'No Mobiles Block'\n    objects_block = 'No Objects Block'\n    rooms_block = 'No Rooms Block'\n    strings_block = 'No Strings Block'\n    resets_block = 'No Resets Block'\n    shops_block = 'No Shops Block'\n    specials_block = 'No Specials Block'\n    rspecs_block = 'No Room Specials Block'\n    triggers_block = 'No Triggers Block'\n    header_info = ''\n    \n    # Parse v1 Header Info\n    if area_file.match(/^#AREA.*~.*?\\n/)\n      header_v1 = area_file.match(/^#AREA.*~.*?\\n/)\n      header_info = parse_area_header_v1(header_v1[0], user_id)\n    end\n    # Parse v2 Header Info\n    if area_file.match(/^#AREA.*?\\nEnd/m)\n      header_v2 = area_file.match(/^#AREA.*?\\nEnd/m)\n      header_info = parse_area_header_v2(header_v2[0], user_id)\n    end\n    # Parse the Mobiles Block\n    if area_file.match(/^#MOBILES\\n#(.*?)\\n#0/m)\n      mobiles_block = parse_mobiles( area_file.match(/^#MOBILES\\n#(.*?)\\n#0/m)[1] )\n    end\n    # Parse the Objects Block\n    if area_file.match(/^#OBJECTS\\n#.*?\\n#0/m)\n      objects_block = parse_objects( area_file.match(/^#OBJECTS\\n#(.*?)\\n#0/m)[1] )\n    end\n    \n    \n    \n    if area_file.match(/^#ROOMS\\n#.*?\\n#0/m)\n      rooms_block = area_file.match(/^#ROOMS\\n#(.*?)\\n#0/m)\n    end\n    if area_file.match(/^#STRINGS\\n#.*?\\n#0/m)\n      strings_block = area_file.match(/^#STRINGS\\n#(.*?)\\n#0/m)\n    end\n    if area_file.match(/^#RESETS\\n.*?\\nS/m)\n      resets_block = area_file.match(/^#RESETS\\n.*?\\nS/m)\n    end\n    if area_file.match(/^#SHOPS\\n.*?\\n0/m)\n      shops_block = area_file.match(/^#SHOPS\\n.*?\\n0/m)\n    end\n    if area_file.match(/^#SPECIALS\\n.*?\\nS/m)\n      specials_block = area_file.match(/^#SPECIALS\\n.*?\\nS/m)\n    end\n    if area_file.match(/^#RSPECS\\n.*?\\nS/m)\n      rspecs_block = area_file.match(/^#RSPECS\\n.*?\\nS/m)\n    end\n    if area_file.match(/^#TRIGGERS\\n.*?\\nS/m)\n      triggers_block = area_file.match(/^#TRIGGERS\\n.*?\\nS/m)\n    end\n\n    return \"<h1>Header</h1>#{format_hash(header_info)}<hr>\" <<\n           \"<h1>Mobiles</h1>#{format_hash(mobiles_block)}<hr>\" <<\n           \"<h1>Objects (WIP)</h1>#{format_hash(objects_block)}<hr>\" #<<\n           #\"#{rooms_block}<hr>#{strings_block}<hr>#{resets_block}<hr>#{shops_block}\" <<\n           #\"#{specials_block}<hr>#{rspecs_block}<hr>#{triggers_block}<hr><b>EOF</b>\"\n\n  end\n  \nend\n\ndef format_hash(h)\n  $formatted_hash = ''\n  \n    h.each do |item|\n      $formatted_hash = $formatted_hash + \"<b>#{item[0]}:</b> \"\n      if item[1].class.name == \"Hash\"\n        $formatted_hash = $formatted_hash + \"<table border=\\\"1\\\"><tr><td>#{format_hash(item[1])}</td></tr></table>\"\n      else\n        $formatted_hash = $formatted_hash + \"#{item[1]}<br>\"\n      end\n    end\n  \n  return $formatted_hash\nend\n\ndef parse_objects(objects_block)\n  objects_info = Hash.new\n  i = 1\n  \n  objects = objects_block.split(\"#\").map(&:strip)\n  \n  objects.each do |object|\n    m = object.match(/^(\\d*)\\n(.*)~\\n(.*)~\\n(.*)\\n~\\n/)\n    object_info = Hash.new\n    object_info[\"vnum\"]     = m[1].to_i\n    object_info[\"keywords\"] = m[2].strip\n    object_info[\"sdesc\"]    = m[3].strip\n    object_info[\"ldesc\"]    = m[4].strip\n    \n    m = object.match(/^(\\d*) (\\d*) (\\d*)\\n(\\d*) (\\d*) (\\d*) (\\d*)\\n(\\d*) (\\d*) 0/)\n    object_info[\"object_type\"] = m[1].to_i\n    object_info[\"extra_flags\"] = m[2].to_i\n    object_info[\"wear_flags\"]  = m[3].to_i\n    object_info[\"v0\"]          = m[4].to_i\n    object_info[\"v1\"]          = m[5].to_i\n    object_info[\"v2\"]          = m[6].to_i\n    object_info[\"v3\"]          = m[7].to_i\n    object_info[\"weight\"]      = m[8].to_i\n    object_info[\"cost\"]        = m[9].to_i\n    \n    if object.match(/^E$/) # Object has any extra descriptions?\n      extras_list = object.split(/^E$/).map(&:strip) # Split by E and remove front end junk.\n      extras_list.shift\n      \n      extra_descs = Hash.new\n      \n      j = 1\n      \n      extras_list.each do |desc|\n        \n        extra_desc = Hash.new\n        dm = desc.match(/^(.*)~\\n(.*)\\n~/m)\n        extra_desc[\"keywords\"]    = dm[1].strip\n        extra_desc[\"description\"] = dm[2].strip\n        \n        extra_descs[j] = extra_desc\n        j = j + 1\n      end\n      \n      object_info[\"extra_descs\"] = extra_descs\n    end\n    \n    if object.match(/^A$/) # Object has any applies?\n      applies_list = object.split(/^A$/).map(&:strip) # Split by A and remove front end junk.\n      applies_list.shift\n      \n      applies = Hash.new\n      \n      j = 1\n      \n      applies_list.each do |apply_group|\n        \n        apply = Hash.new\n        am = apply_group.match(/^(\\d*) (\\d*)/)\n        apply[\"apply_type\"] = am[1].to_i\n        apply[\"amount\"]     = am[2].to_i\n        \n        applies[j] = apply\n        j = j + 1\n      end\n      \n      object_info[\"applies\"] = applies\n    end\n    \n    objects_info[i] = object_info\n    i = i + 1\n  end\n  \n  return objects_info\nend","undoManager":{"mark":96,"position":100,"stack":[[{"start":{"row":444,"column":8},"end":{"row":444,"column":9},"action":"insert","lines":["p"],"id":4542}],[{"start":{"row":444,"column":9},"end":{"row":444,"column":10},"action":"insert","lines":["l"],"id":4543}],[{"start":{"row":444,"column":10},"end":{"row":444,"column":11},"action":"insert","lines":["i"],"id":4544}],[{"start":{"row":444,"column":11},"end":{"row":444,"column":12},"action":"insert","lines":["e"],"id":4545}],[{"start":{"row":444,"column":12},"end":{"row":444,"column":13},"action":"insert","lines":["s"],"id":4546}],[{"start":{"row":444,"column":36},"end":{"row":444,"column":37},"action":"insert","lines":["A"],"id":4547}],[{"start":{"row":444,"column":37},"end":{"row":444,"column":38},"action":"remove","lines":["E"],"id":4548}],[{"start":{"row":444,"column":65},"end":{"row":444,"column":66},"action":"insert","lines":["A"],"id":4549}],[{"start":{"row":444,"column":66},"end":{"row":444,"column":67},"action":"remove","lines":["E"],"id":4550}],[{"start":{"row":445,"column":6},"end":{"row":445,"column":12},"action":"remove","lines":["extras"],"id":4551},{"start":{"row":445,"column":6},"end":{"row":445,"column":7},"action":"insert","lines":["a"]}],[{"start":{"row":445,"column":7},"end":{"row":445,"column":8},"action":"insert","lines":["p"],"id":4552}],[{"start":{"row":445,"column":8},"end":{"row":445,"column":9},"action":"insert","lines":["p"],"id":4553}],[{"start":{"row":445,"column":9},"end":{"row":445,"column":10},"action":"insert","lines":["l"],"id":4554}],[{"start":{"row":445,"column":10},"end":{"row":445,"column":11},"action":"insert","lines":["i"],"id":4555}],[{"start":{"row":445,"column":11},"end":{"row":445,"column":12},"action":"insert","lines":["e"],"id":4556}],[{"start":{"row":445,"column":12},"end":{"row":445,"column":13},"action":"insert","lines":["s"],"id":4557}],[{"start":{"row":447,"column":6},"end":{"row":447,"column":17},"action":"remove","lines":["extra_descs"],"id":4558},{"start":{"row":447,"column":6},"end":{"row":447,"column":7},"action":"insert","lines":["a"]}],[{"start":{"row":447,"column":7},"end":{"row":447,"column":8},"action":"insert","lines":["p"],"id":4559}],[{"start":{"row":447,"column":8},"end":{"row":447,"column":9},"action":"insert","lines":["p"],"id":4560}],[{"start":{"row":447,"column":9},"end":{"row":447,"column":10},"action":"insert","lines":["l"],"id":4561}],[{"start":{"row":447,"column":10},"end":{"row":447,"column":11},"action":"insert","lines":["i"],"id":4562}],[{"start":{"row":447,"column":11},"end":{"row":447,"column":12},"action":"insert","lines":["e"],"id":4563}],[{"start":{"row":447,"column":12},"end":{"row":447,"column":13},"action":"insert","lines":["s"],"id":4564}],[{"start":{"row":451,"column":6},"end":{"row":451,"column":17},"action":"remove","lines":["extras_list"],"id":4565},{"start":{"row":451,"column":6},"end":{"row":451,"column":18},"action":"insert","lines":["applies_list"]}],[{"start":{"row":451,"column":28},"end":{"row":451,"column":32},"action":"remove","lines":["desc"],"id":4566},{"start":{"row":451,"column":28},"end":{"row":451,"column":29},"action":"insert","lines":["a"]}],[{"start":{"row":451,"column":29},"end":{"row":451,"column":30},"action":"insert","lines":["p"],"id":4567}],[{"start":{"row":451,"column":30},"end":{"row":451,"column":31},"action":"insert","lines":["p"],"id":4568}],[{"start":{"row":451,"column":31},"end":{"row":451,"column":32},"action":"insert","lines":["l"],"id":4569}],[{"start":{"row":451,"column":32},"end":{"row":451,"column":33},"action":"insert","lines":["y"],"id":4570}],[{"start":{"row":453,"column":8},"end":{"row":453,"column":18},"action":"remove","lines":["extra_desc"],"id":4571},{"start":{"row":453,"column":8},"end":{"row":453,"column":13},"action":"insert","lines":["apply"]}],[{"start":{"row":454,"column":8},"end":{"row":454,"column":9},"action":"remove","lines":["d"],"id":4572}],[{"start":{"row":454,"column":8},"end":{"row":454,"column":9},"action":"insert","lines":["a"],"id":4573}],[{"start":{"row":451,"column":33},"end":{"row":451,"column":34},"action":"insert","lines":["_"],"id":4574}],[{"start":{"row":451,"column":34},"end":{"row":451,"column":35},"action":"insert","lines":["i"],"id":4575}],[{"start":{"row":451,"column":35},"end":{"row":451,"column":36},"action":"insert","lines":["t"],"id":4576}],[{"start":{"row":451,"column":36},"end":{"row":451,"column":37},"action":"insert","lines":["e"],"id":4577}],[{"start":{"row":451,"column":37},"end":{"row":451,"column":38},"action":"insert","lines":["m"],"id":4578}],[{"start":{"row":454,"column":13},"end":{"row":454,"column":17},"action":"remove","lines":["desc"],"id":4579},{"start":{"row":454,"column":13},"end":{"row":454,"column":23},"action":"insert","lines":["apply_item"]}],[{"start":{"row":454,"column":19},"end":{"row":454,"column":23},"action":"remove","lines":["item"],"id":4580},{"start":{"row":454,"column":19},"end":{"row":454,"column":20},"action":"insert","lines":["g"]}],[{"start":{"row":454,"column":20},"end":{"row":454,"column":21},"action":"insert","lines":["r"],"id":4581}],[{"start":{"row":454,"column":21},"end":{"row":454,"column":22},"action":"insert","lines":["o"],"id":4582}],[{"start":{"row":454,"column":22},"end":{"row":454,"column":23},"action":"insert","lines":["u"],"id":4583}],[{"start":{"row":454,"column":23},"end":{"row":454,"column":24},"action":"insert","lines":["p"],"id":4584}],[{"start":{"row":451,"column":33},"end":{"row":451,"column":38},"action":"remove","lines":["_item"],"id":4585},{"start":{"row":451,"column":33},"end":{"row":451,"column":39},"action":"insert","lines":["_group"]}],[{"start":{"row":462,"column":35},"end":{"row":462,"column":46},"action":"remove","lines":["extra_descs"],"id":4586},{"start":{"row":462,"column":35},"end":{"row":462,"column":36},"action":"insert","lines":["a"]}],[{"start":{"row":462,"column":36},"end":{"row":462,"column":37},"action":"insert","lines":["p"],"id":4587}],[{"start":{"row":462,"column":37},"end":{"row":462,"column":38},"action":"insert","lines":["l"],"id":4588}],[{"start":{"row":462,"column":37},"end":{"row":462,"column":38},"action":"remove","lines":["l"],"id":4589}],[{"start":{"row":462,"column":37},"end":{"row":462,"column":38},"action":"insert","lines":["p"],"id":4590}],[{"start":{"row":462,"column":38},"end":{"row":462,"column":39},"action":"insert","lines":["l"],"id":4591}],[{"start":{"row":462,"column":39},"end":{"row":462,"column":40},"action":"insert","lines":["i"],"id":4592}],[{"start":{"row":462,"column":40},"end":{"row":462,"column":41},"action":"insert","lines":["e"],"id":4593}],[{"start":{"row":462,"column":41},"end":{"row":462,"column":42},"action":"insert","lines":["s"],"id":4594}],[{"start":{"row":462,"column":19},"end":{"row":462,"column":30},"action":"remove","lines":["extra_descs"],"id":4595},{"start":{"row":462,"column":19},"end":{"row":462,"column":20},"action":"insert","lines":["a"]}],[{"start":{"row":462,"column":20},"end":{"row":462,"column":21},"action":"insert","lines":["p"],"id":4596}],[{"start":{"row":462,"column":21},"end":{"row":462,"column":22},"action":"insert","lines":["p"],"id":4597}],[{"start":{"row":462,"column":22},"end":{"row":462,"column":23},"action":"insert","lines":["l"],"id":4598}],[{"start":{"row":462,"column":23},"end":{"row":462,"column":24},"action":"insert","lines":["i"],"id":4599}],[{"start":{"row":462,"column":24},"end":{"row":462,"column":25},"action":"insert","lines":["e"],"id":4600}],[{"start":{"row":462,"column":25},"end":{"row":462,"column":26},"action":"insert","lines":["s"],"id":4601}],[{"start":{"row":458,"column":25},"end":{"row":458,"column":35},"action":"remove","lines":["extra_desc"],"id":4602},{"start":{"row":458,"column":25},"end":{"row":458,"column":26},"action":"insert","lines":["a"]}],[{"start":{"row":458,"column":26},"end":{"row":458,"column":27},"action":"insert","lines":["p"],"id":4603}],[{"start":{"row":458,"column":27},"end":{"row":458,"column":28},"action":"insert","lines":["p"],"id":4604}],[{"start":{"row":458,"column":28},"end":{"row":458,"column":29},"action":"insert","lines":["l"],"id":4605}],[{"start":{"row":458,"column":29},"end":{"row":458,"column":30},"action":"insert","lines":["y"],"id":4606}],[{"start":{"row":455,"column":36},"end":{"row":455,"column":37},"action":"remove","lines":["d"],"id":4607},{"start":{"row":455,"column":36},"end":{"row":455,"column":37},"action":"insert","lines":["a"]}],[{"start":{"row":456,"column":36},"end":{"row":456,"column":37},"action":"remove","lines":["d"],"id":4608},{"start":{"row":456,"column":36},"end":{"row":456,"column":37},"action":"insert","lines":["a"]}],[{"start":{"row":455,"column":20},"end":{"row":455,"column":28},"action":"remove","lines":["keywords"],"id":4609},{"start":{"row":455,"column":20},"end":{"row":455,"column":30},"action":"insert","lines":["apply_type"]}],[{"start":{"row":456,"column":20},"end":{"row":456,"column":31},"action":"remove","lines":["description"],"id":4610},{"start":{"row":456,"column":20},"end":{"row":456,"column":21},"action":"insert","lines":["a"]}],[{"start":{"row":456,"column":21},"end":{"row":456,"column":22},"action":"insert","lines":["m"],"id":4611}],[{"start":{"row":456,"column":22},"end":{"row":456,"column":23},"action":"insert","lines":["o"],"id":4612}],[{"start":{"row":456,"column":23},"end":{"row":456,"column":24},"action":"insert","lines":["u"],"id":4613}],[{"start":{"row":456,"column":24},"end":{"row":456,"column":25},"action":"insert","lines":["n"],"id":4614}],[{"start":{"row":456,"column":25},"end":{"row":456,"column":26},"action":"insert","lines":["t"],"id":4615}],[{"start":{"row":455,"column":34},"end":{"row":455,"column":36},"action":"remove","lines":["  "],"id":4616}],[{"start":{"row":455,"column":32},"end":{"row":455,"column":34},"action":"remove","lines":["  "],"id":4617}],[{"start":{"row":455,"column":32},"end":{"row":455,"column":33},"action":"insert","lines":[" "],"id":4618}],[{"start":{"row":456,"column":29},"end":{"row":456,"column":30},"action":"insert","lines":[" "],"id":4619}],[{"start":{"row":456,"column":30},"end":{"row":456,"column":31},"action":"insert","lines":[" "],"id":4620}],[{"start":{"row":456,"column":31},"end":{"row":456,"column":32},"action":"insert","lines":[" "],"id":4621}],[{"start":{"row":456,"column":32},"end":{"row":456,"column":33},"action":"insert","lines":[" "],"id":4622}],[{"start":{"row":455,"column":41},"end":{"row":455,"column":46},"action":"remove","lines":["strip"],"id":4623},{"start":{"row":455,"column":41},"end":{"row":455,"column":42},"action":"insert","lines":["t"]}],[{"start":{"row":455,"column":42},"end":{"row":455,"column":43},"action":"insert","lines":["o"],"id":4624}],[{"start":{"row":455,"column":41},"end":{"row":455,"column":43},"action":"remove","lines":["to"],"id":4625},{"start":{"row":455,"column":41},"end":{"row":455,"column":45},"action":"insert","lines":["to_i"]}],[{"start":{"row":456,"column":41},"end":{"row":456,"column":46},"action":"remove","lines":["strip"],"id":4626},{"start":{"row":456,"column":41},"end":{"row":456,"column":42},"action":"insert","lines":["t"]}],[{"start":{"row":456,"column":42},"end":{"row":456,"column":43},"action":"insert","lines":["o"],"id":4627}],[{"start":{"row":456,"column":43},"end":{"row":456,"column":44},"action":"insert","lines":["_"],"id":4628}],[{"start":{"row":456,"column":44},"end":{"row":456,"column":45},"action":"insert","lines":["i"],"id":4629}],[{"start":{"row":454,"column":32},"end":{"row":454,"column":47},"action":"remove","lines":["^(.*)~\\n(.*)\\n~"],"id":4631},{"start":{"row":454,"column":32},"end":{"row":454,"column":46},"action":"insert","lines":["^(\\d*) (\\d*)\\n"]}],[{"start":{"row":454,"column":47},"end":{"row":454,"column":48},"action":"remove","lines":["m"],"id":4632}],[{"start":{"row":455,"column":8},"end":{"row":455,"column":18},"action":"remove","lines":["extra_desc"],"id":4633},{"start":{"row":455,"column":8},"end":{"row":455,"column":13},"action":"insert","lines":["apply"]}],[{"start":{"row":456,"column":8},"end":{"row":456,"column":18},"action":"remove","lines":["extra_desc"],"id":4634},{"start":{"row":456,"column":8},"end":{"row":456,"column":13},"action":"insert","lines":["apply"]}],[{"start":{"row":454,"column":45},"end":{"row":454,"column":46},"action":"remove","lines":["n"],"id":4635}],[{"start":{"row":454,"column":44},"end":{"row":454,"column":45},"action":"remove","lines":["\\"],"id":4636}],[{"start":{"row":454,"column":44},"end":{"row":454,"column":45},"action":"insert","lines":["$"],"id":4637}],[{"start":{"row":458,"column":8},"end":{"row":458,"column":19},"action":"remove","lines":["extra_descs"],"id":4638},{"start":{"row":458,"column":8},"end":{"row":458,"column":15},"action":"insert","lines":["applies"]}],[{"start":{"row":454,"column":44},"end":{"row":454,"column":45},"action":"remove","lines":["$"],"id":4639}],[{"start":{"row":454,"column":44},"end":{"row":454,"column":45},"action":"insert","lines":["g"],"id":4640}],[{"start":{"row":454,"column":45},"end":{"row":454,"column":46},"action":"insert","lines":["i"],"id":4641}],[{"start":{"row":454,"column":45},"end":{"row":454,"column":46},"action":"remove","lines":["i"],"id":4642}],[{"start":{"row":454,"column":44},"end":{"row":454,"column":45},"action":"remove","lines":["g"],"id":4643}]]},"ace":{"folds":[],"scrolltop":6607,"scrollleft":0,"selection":{"start":{"row":454,"column":44},"end":{"row":454,"column":44},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":439,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1460833950044}