{"changed":true,"filter":false,"title":"area.rb","tooltip":"/app/models/area.rb","value":"require_relative '_import'\nrequire_relative '_translate'\nrequire_relative '_lookup'\n\nclass Area < ActiveRecord::Base\n  belongs_to :user\n  has_many :helps, dependent: :destroy\n  has_many :rooms, dependent: :destroy\n  has_many :objs, dependent: :destroy\n  has_many :mobiles, dependent: :destroy\n  has_many :area_strings, dependent: :destroy\n  has_many :resets, dependent: :destroy\n  has_many :shares, dependent: :destroy\n  \n  has_many :applies, through: :objs\n  has_many :oxdescs, through: :objs\n  has_many :shops, through: :mobiles\n  has_many :specials, through: :mobiles\n  has_many :exits, through: :rooms\n  has_many :rxdescs, through: :rooms\n  has_many :room_specials, through: :rooms\n  has_many :sub_resets, through: :resets\n  has_many :triggers, through: :rooms, :source => :triggers\n  \n  include Bitfields\n  \n  bitfield :misc_flags,\n                    2**0 => :share_publicly,\n                    2**1 => :use_rulers,\n                    2**2 => :show_formatted_blocks\n  \n  bitfield  :flags, 2**0 => :manmade,  # Hex 1\n                    2**1 => :city,     # Hex 2\n                    2**2 => :forest,   # Hex 4\n                    2**3 => :limited,  # Hex 8\n                    2**4 => :aerial,   # Hex 10\n                    2**5 => :reserved, # Hex 20\n                    2**6 => :arena,    # Hex 40\n                    2**7 => :quest,    # Hex 80\n                    2**8 => :novnum,   # Hex 100\n                    2**9 => :no_save   # Hex 200\n                    \n  bitfield :default_room_flags, \n                2**0 =>  :dark,          # Dec:          1 / Hex:         1\n                2**1 =>  :no_sleep,      # Dec:          2 / Hex:         2\n                2**2 =>  :no_mob,        # Dec:          4 / Hex:         4\n                2**3 =>  :indoors,       # Dec:          8 / Hex:         8\n#               2**4 =>  :flag,          # Dec:         16 / Hex:        10\n                2**5 =>  :foggy,         # Dec:         32 / Hex:        20\n                2**6 =>  :fire,          # Dec:         64 / Hex:        40\n                2**7 =>  :lava,          # Dec:        128 / Hex:        80\n#               2**8 =>  :flag,          # Dec:        256 / Hex:       100\n                2**9 =>  :private_room,  # Dec:        512 / Hex:       200\n                2**10 => :peaceful,      # Dec:       1024 / Hex:       400\n                2**11 => :solitary,      # Dec:       2048 / Hex:       800\n#               2**12 => :flag,          # Dec:       4096 / Hex:      1000\n                2**13 => :no_recall,     # Dec:       8192 / Hex:      2000\n                2**14 => :no_steal,      # Dec:      16384 / Hex:      4000\n                2**15 => :notrans,       # Dec:      32768 / Hex:      8000\n                2**16 => :no_spell,      # Dec:      65536 / Hex:     10000\n                2**17 => :seafloor,      # Dec:     131072 / Hex:     20000\n                2**18 => :no_fly,        # Dec:     262144 / Hex:     40000\n                2**19 => :holy_ground,   # Dec:     524288 / Hex:     80000\n                2**20 => :fly_ok,        # Dec:    1048576 / Hex:    100000\n                2**21 => :no_quest,      # Dec:    2097152 / Hex:    200000\n                2**22 => :no_item,       # Dec:    4194304 / Hex:    400000\n                2**23 => :no_vnum        # Dec:    8388608 / Hex:    800000\n#               2**24 => :flag,          # Dec:   16777216 / Hex:   1000000\n#               2**25 => :flag,          # Dec:   33554432 / Hex:   2000000\n#               2**26 => :flag,          # Dec:   67108864 / Hex:   4000000\n#               2**27 => :flag,          # Dec:  134217728 / Hex:   8000000\n#               2**28 => :flag,          # Dec:  268435456 / Hex:  10000000\n#               2**29 => :flag,          # Dec:  536870912 / Hex:  20000000\n#               2**30 => :flag,          # Dec: 1073741824 / Hex:  40000000\n#               2**31 => :flag,          # Dec: 2147483648 / Hex:  80000000\n#               2**32 => :flag,          # Dec: 4294967296 / Hex: 100000000\n\n  validates :name, length: { in: 1..20 }\n  validates :author, length: { in: 1..75 }\n\n  validates :vnum_qty, numericality: { only_integer: true, greater_than_or_equal_to: 0 }\n  validates :lowlevel, numericality: { only_integer: true, greater_than: 0, less_than: 51  }\n  validates :highlevel, numericality: { only_integer: true, greater_than: 0, less_than: 51  }\n  validates :default_terrain, numericality: { only_integer: true, greater_than_or_equal_to: 0 }\n  validates :area_number,  numericality: { only_integer: true, greater_than: 0 }\n  validates :user_id,  numericality: { only_integer: true, greater_than: 0 }\n  \n  validate do |area|\n    area.errors.add :base, \"Name may only contain US-ASCII characters.  Invalid characters: \" + area.name.remove(/[\\x0A\\x0D -~]/) if area.name.remove(/[\\x0A\\x0D -~]/).length > 0\n    area.errors.add :base, \"Author may only contain US-ASCII characters.  Invalid characters: \" + area.author.remove(/[\\x0A\\x0D -~]/) if area.author.remove(/[\\x0A\\x0D -~]/).length > 0\n  end\n\n  before_create :default_values\n  def default_values\n    self.flags ||= 0\n    self.vnum_qty ||= 100\n    self.misc_flags ||= 0\n    self.default_terrain ||= 0\n    self.default_room_flags ||= 0\n    return true\n  end\n  \n  def self.import(file, user_id)\n\n    range_low ||= 0\n    range_high ||= 0\n    author ||= ''\n    name ||= ''\n    flags ||= 0\n    \n    area_file = file.read.encode(universal_newline: true).gsub(/\\s*\\n/,\"\\n\")\n    #lines = area_file.readlines.map(&:chomp) #readlines from file & removes newline symbol\n\n    header_v1 = 'No Format 1 Area Header'\n    header_v2 = 'No Format 2 Area Header'\n    mobiles_block = 'No Mobiles Block'\n    objects_block = 'No Objects Block'\n    rooms_block = 'No Rooms Block'\n    strings_block = 'No Strings Block'\n    resets_block = 'No Resets Block'\n    shops_block = 'No Shops Block'\n    specials_block = 'No Specials Block'\n    rspecs_block = 'No Room Specials Block'\n    triggers_block = 'No Triggers Block'\n    header_info = ''\n    \n    # Parse v1 Header Info\n    if area_file.match(/^#AREA.*~.*?\\n/)\n      header_v1 = area_file.match(/^#AREA.*~.*?\\n/)\n      header_info = parse_area_header_v1(header_v1[0], user_id)\n    end\n    # Parse v2 Header Info\n    if area_file.match(/^#AREA.*?\\nEnd/m)\n      header_v2 = area_file.match(/^#AREA.*?\\nEnd/m)\n      header_info = parse_area_header_v2(header_v2[0], user_id)\n    end\n    # Parse the Mobiles Block\n    if area_file.match(/^#MOBILES\\n#(.*?)\\n#0/m)\n      mobiles_block = parse_mobiles( area_file.match(/^#MOBILES\\n#(.*?)\\n#0/m)[1] )\n    end\n    # Parse the Objects Block\n    if area_file.match(/^#OBJECTS\\n#.*?\\n#0/m)\n      objects_block = parse_objects( area_file.match(/^#OBJECTS\\n#(.*?)\\n#0/m)[1] )\n    end\n    \n    \n    \n    if area_file.match(/^#ROOMS\\n#.*?\\n#0/m)\n      rooms_block = area_file.match(/^#ROOMS\\n#(.*?)\\n#0/m)\n    end\n    if area_file.match(/^#STRINGS\\n#.*?\\n#0/m)\n      strings_block = area_file.match(/^#STRINGS\\n#(.*?)\\n#0/m)\n    end\n    if area_file.match(/^#RESETS\\n.*?\\nS/m)\n      resets_block = area_file.match(/^#RESETS\\n.*?\\nS/m)\n    end\n    if area_file.match(/^#SHOPS\\n.*?\\n0/m)\n      shops_block = area_file.match(/^#SHOPS\\n.*?\\n0/m)\n    end\n    if area_file.match(/^#SPECIALS\\n.*?\\nS/m)\n      specials_block = area_file.match(/^#SPECIALS\\n.*?\\nS/m)\n    end\n    if area_file.match(/^#RSPECS\\n.*?\\nS/m)\n      rspecs_block = area_file.match(/^#RSPECS\\n.*?\\nS/m)\n    end\n    if area_file.match(/^#TRIGGERS\\n.*?\\nS/m)\n      triggers_block = area_file.match(/^#TRIGGERS\\n.*?\\nS/m)\n    end\n\n    return \"#{header_info}<hr>#{header_v1}<hr>#{header_v2}<hr>#{mobiles_block}<hr>#{objects_block}<hr>\" <<\n           \"#{rooms_block}<hr>#{strings_block}<hr>#{resets_block}<hr>#{shops_block}\" <<\n           \"#{specials_block}<hr>#{rspecs_block}<hr>#{triggers_block}<hr><b>EOF</b>\"\n\n  end\n  \n  def nextroomvnum\n    $i = 0\n    while self.rooms.exists?(:vnum => $i)  do\n        $i +=1\n    end\n    return $i\n  end\n  \n  def nextobjvnum\n    $i = 0\n    while self.objs.exists?(:vnum => $i)  do\n        $i +=1\n    end\n    return $i\n  end\n\n  def nextmobilevnum\n    $i = 0\n    while self.mobiles.exists?(:vnum => $i)  do\n        $i +=1\n    end\n    return $i\n  end\n\n  def nextarea_stringvnum\n    $i = 0\n    while self.area_strings.exists?(:vnum => $i)  do\n        $i +=1\n    end\n    return $i\n  end\n  \n  def flags_as_hex\n    #return self.flags.to_s(16).upper ... trying new\n    return \"%X\" % self.flags\n  end\n  \n  def flags_as_string\n    $flags_string = ''\n    $flags_string = $flags_string + ' MANMADE' if self.manmade\n    $flags_string = $flags_string + ' CITY' if self.city\n    $flags_string = $flags_string + ' FOREST' if self.forest\n    $flags_string = $flags_string + ' LIMITED' if self.limited\n    $flags_string = $flags_string + ' AERIAL' if self.aerial\n    $flags_string = $flags_string + ' RESERVED' if self.reserved\n    $flags_string = $flags_string + ' ARENA' if self.arena\n    $flags_string = $flags_string + ' QUEST' if self.quest\n    $flags_string = $flags_string + ' NOVNUM' if self.novnum\n    $flags_string = $flags_string + ' NOSAVE' if self.no_save\n    return $flags_string\n  end\n  \n  def door_reset_count\n    i = 0\n    self.rooms.each do |room|\n\n      room.exits.each do |exit|\n        i = i + 1 if exit.has_reset?\n      end\n\n    end\n    return i\n  end\n  \n  def shared_with?(this_user)\n#   if ( this_user.id == self.user_id || self.share_publicly? || this_user.is_admin? || self.shares.exists?(:user_id => this_user.id ) )\n    if self.shares.exists?(:user_id => this_user.id )\n      return true\n    else\n      return false\n    end\n  end\n\n  def my_area\n    return self\n  end\n  \n  def last_updated?\n    $latest_update = self.updated_at\n    $update = $latest_update\n    \n    $update = self.area_strings.order(updated_at: :desc).first.updated_at if self.area_strings.count > 0\n    $latest_update = $update           if $update > $latest_update\n    \n    $update = self.helps.order(updated_at: :desc).first.updated_at if self.helps.count > 0\n    $latest_update = $update           if $update > $latest_update\n    \n    $update = self.rooms.order(updated_at: :desc).first.updated_at if self.rooms.count > 0\n    $latest_update = $update           if $update > $latest_update\n    \n    $update = self.mobiles.order(updated_at: :desc).first.updated_at if self.mobiles.count > 0\n    $latest_update = $update           if $update > $latest_update\n    \n    $update = self.objs.order(updated_at: :desc).first.updated_at if self.objs.count > 0\n    $latest_update = $update           if $update > $latest_update\n    \n    $update = self.resets.order(updated_at: :desc).first.updated_at if self.resets.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.shops.order(updated_at: :desc).first.updated_at if self.shops.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.specials.order(updated_at: :desc).first.updated_at if self.specials.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.room_specials.order(updated_at: :desc).first.updated_at if self.room_specials.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.sub_resets.order(updated_at: :desc).first.updated_at if self.sub_resets.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.triggers.order(updated_at: :desc).first.updated_at if self.triggers.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.applies.order(updated_at: :desc).first.updated_at if self.applies.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.exits.order(updated_at: :desc).first.updated_at if self.exits.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.rxdescs.order(updated_at: :desc).first.updated_at if self.rxdescs.count > 0\n    $latest_update = $update           if $update > $latest_update\n\n    $update = self.oxdescs.order(updated_at: :desc).first.updated_at if self.oxdescs.count > 0\n    $latest_update = $update           if $update > $latest_update\n    \n    return $latest_update\n  end\n  \n  def self.import(file, user_id)\n\n    range_low ||= 0\n    range_high ||= 0\n    author ||= ''\n    name ||= ''\n    flags ||= 0\n    \n    area_file = file.read.encode(universal_newline: true).gsub(/\\s*\\n/,\"\\n\")\n\n    header_info = nil\n    helps_block = nil\n    mobiles_block = nil\n    objects_block = nil\n    rooms_block = nil\n    strings_block = nil\n    \n    resets_block = 'No Resets Block'\n    shops_block = 'No Shops Block'\n    specials_block = 'No Specials Block'\n    rspecs_block = 'No Room Specials Block'\n    triggers_block = 'No Triggers Block'\n    \n    if area_file.match(/^#AREA.*~.*?\\n/) # v1 Header\n      header_info = parse_area_header_v1( area_file.match(/^#AREA.*~.*?\\n/)[0] )\n    end\n    \n    if area_file.match(/^#AREA.*?\\nEnd/m) # v2 Header\n      header_info = parse_area_header_v2( area_file.match(/^#AREA.*?\\nEnd/m)[0] )\n    end\n\n    if area_file.match(/^#HELPS\\n(.*?)0 \\$~/m)\n      helps_block = parse_helps( area_file.match(/^#HELPS\\n(.*?)0 \\$~/m)[1] )\n    end\n    \n    if area_file.match(/^#MOBILES\\n#(.*?)\\n#0/m)\n      mobiles_block = parse_mobiles( area_file.match(/^#MOBILES\\n#(.*?)\\n#0/m)[1] )\n    end\n\n    if area_file.match(/^#OBJECTS\\n#(.*?)\\n#0/m)\n      objects_block = parse_objects( area_file.match(/^#OBJECTS\\n#(.*?)\\n#0/m)[1] )\n    end\n    \n    if area_file.match(/^#ROOMS\\n#(.*?)\\n#0/m)\n      rooms_block = parse_rooms( area_file.match(/^#ROOMS\\n#(.*?)\\n#0/m)[1] )\n    end\n    \n    if area_file.match(/^#STRINGS\\n#.*?\\n#0/m)\n      strings_block = parse_strings( area_file.match(/^#STRINGS\\n#(.*?)\\n#0/m)[1] )\n    end\n    \n    if area_file.match(/^#RESETS\\n.*?\\nS/m)\n      resets_block = area_file.match(/^#RESETS\\n.*?\\nS/m)\n    end\n    if area_file.match(/^#SHOPS\\n.*?\\n0/m)\n      shops_block = area_file.match(/^#SHOPS\\n.*?\\n0/m)\n    end\n    if area_file.match(/^#SPECIALS\\n.*?\\nS/m)\n      specials_block = area_file.match(/^#SPECIALS\\n.*?\\nS/m)\n    end\n    if area_file.match(/^#RSPECS\\n.*?\\nS/m)\n      rspecs_block = area_file.match(/^#RSPECS\\n.*?\\nS/m)\n    end\n    if area_file.match(/^#TRIGGERS\\n.*?\\nS/m)\n      triggers_block = area_file.match(/^#TRIGGERS\\n.*?\\nS/m)\n    end\n\n    return \"<h1>Header</h1>#{format_hash(header_info) if header_info != nil}<hr>\" <<\n           \"<h1>Helps</h1>#{format_hash(helps_block) if helps_block != nil}<hr>\" <<\n           \"<h1>Mobiles</h1>#{format_hash(mobiles_block) if mobiles_block != nil}<hr>\" <<\n           \"<h1>Objects</h1>#{format_hash(objects_block) if objects_block != nil}<hr>\" <<\n           \"<h1>Rooms</h1>#{format_hash(rooms_block) if rooms_block != nil}<hr>\" <<\n           \"<h1>Strings</h1>#{format_hash(strings_block) if strings_block != nil}<hr>\" #<<\n           #\"#{rooms_block}<hr>#{strings_block}<hr>#{resets_block}<hr>#{shops_block}\" <<\n           #\"#{specials_block}<hr>#{rspecs_block}<hr>#{triggers_block}<hr><b>EOF</b>\"\n\n  end\n  \nend\n\ndef format_hash(h)\n  $formatted_hash = ''\n  \n    h.each do |item|\n      $formatted_hash = $formatted_hash + \"<b>#{item[0]}:</b> \"\n      if item[1].class.name == \"Hash\"\n        $formatted_hash = $formatted_hash + \"<table border=\\\"1\\\"><tr><td>#{format_hash(item[1])}</td></tr></table>\"\n      else\n        $formatted_hash = $formatted_hash + \"#{item[1]}<br>\"\n      end\n    end\n  \n  return $formatted_hash\nend\n\n","undoManager":{"mark":99,"position":100,"stack":[[{"start":{"row":353,"column":52},"end":{"row":353,"column":71},"action":"remove","lines":["^#ROOMS\\n#(.*?)\\n#0"],"id":7227},{"start":{"row":353,"column":52},"end":{"row":353,"column":71},"action":"insert","lines":["^#STRINGS\\n#.*?\\n#0"]}],[{"start":{"row":400,"column":10},"end":{"row":400,"column":14},"action":"remove","lines":["help"],"id":7228},{"start":{"row":400,"column":10},"end":{"row":400,"column":11},"action":"insert","lines":["s"]}],[{"start":{"row":400,"column":11},"end":{"row":400,"column":12},"action":"insert","lines":["t"],"id":7229}],[{"start":{"row":400,"column":12},"end":{"row":400,"column":13},"action":"insert","lines":["r"],"id":7230}],[{"start":{"row":400,"column":13},"end":{"row":400,"column":14},"action":"insert","lines":["i"],"id":7231}],[{"start":{"row":400,"column":14},"end":{"row":400,"column":15},"action":"insert","lines":["n"],"id":7232}],[{"start":{"row":400,"column":15},"end":{"row":400,"column":16},"action":"insert","lines":["g"],"id":7233}],[{"start":{"row":400,"column":16},"end":{"row":400,"column":17},"action":"insert","lines":["s"],"id":7234}],[{"start":{"row":400,"column":17},"end":{"row":400,"column":18},"action":"remove","lines":["s"],"id":7235}],[{"start":{"row":400,"column":19},"end":{"row":400,"column":24},"action":"remove","lines":["helps"],"id":7236},{"start":{"row":400,"column":19},"end":{"row":400,"column":20},"action":"insert","lines":["s"]}],[{"start":{"row":400,"column":20},"end":{"row":400,"column":21},"action":"insert","lines":["t"],"id":7237}],[{"start":{"row":400,"column":21},"end":{"row":400,"column":22},"action":"insert","lines":["r"],"id":7238}],[{"start":{"row":400,"column":22},"end":{"row":400,"column":23},"action":"insert","lines":["i"],"id":7239}],[{"start":{"row":400,"column":23},"end":{"row":400,"column":24},"action":"insert","lines":["n"],"id":7240}],[{"start":{"row":400,"column":24},"end":{"row":400,"column":25},"action":"insert","lines":["g"],"id":7241}],[{"start":{"row":400,"column":25},"end":{"row":400,"column":26},"action":"insert","lines":["s"],"id":7242}],[{"start":{"row":401,"column":2},"end":{"row":401,"column":6},"action":"remove","lines":["help"],"id":7243},{"start":{"row":401,"column":2},"end":{"row":401,"column":3},"action":"insert","lines":["s"]}],[{"start":{"row":401,"column":3},"end":{"row":401,"column":4},"action":"insert","lines":["t"],"id":7244}],[{"start":{"row":401,"column":4},"end":{"row":401,"column":5},"action":"insert","lines":["r"],"id":7245}],[{"start":{"row":401,"column":5},"end":{"row":401,"column":6},"action":"insert","lines":["i"],"id":7246}],[{"start":{"row":401,"column":6},"end":{"row":401,"column":7},"action":"insert","lines":["n"],"id":7247}],[{"start":{"row":401,"column":7},"end":{"row":401,"column":8},"action":"insert","lines":["g"],"id":7248}],[{"start":{"row":404,"column":2},"end":{"row":404,"column":7},"action":"remove","lines":["helps"],"id":7249},{"start":{"row":404,"column":2},"end":{"row":404,"column":3},"action":"insert","lines":["s"]}],[{"start":{"row":404,"column":3},"end":{"row":404,"column":4},"action":"insert","lines":["t"],"id":7250}],[{"start":{"row":404,"column":4},"end":{"row":404,"column":5},"action":"insert","lines":["r"],"id":7251}],[{"start":{"row":404,"column":5},"end":{"row":404,"column":6},"action":"insert","lines":["i"],"id":7252}],[{"start":{"row":404,"column":6},"end":{"row":404,"column":7},"action":"insert","lines":["n"],"id":7253}],[{"start":{"row":404,"column":7},"end":{"row":404,"column":8},"action":"insert","lines":["g"],"id":7254}],[{"start":{"row":404,"column":8},"end":{"row":404,"column":9},"action":"insert","lines":["s"],"id":7255}],[{"start":{"row":404,"column":12},"end":{"row":404,"column":23},"action":"remove","lines":["helps_block"],"id":7256},{"start":{"row":404,"column":12},"end":{"row":404,"column":25},"action":"insert","lines":["strings_block"]}],[{"start":{"row":404,"column":32},"end":{"row":404,"column":37},"action":"remove","lines":["/^~$/"],"id":7257},{"start":{"row":404,"column":32},"end":{"row":404,"column":33},"action":"insert","lines":["\""]}],[{"start":{"row":404,"column":33},"end":{"row":404,"column":34},"action":"insert","lines":["#"],"id":7258}],[{"start":{"row":404,"column":34},"end":{"row":404,"column":35},"action":"insert","lines":["\""],"id":7259}],[{"start":{"row":405,"column":0},"end":{"row":405,"column":11},"action":"remove","lines":["  helps.pop"],"id":7260}],[{"start":{"row":406,"column":2},"end":{"row":406,"column":7},"action":"remove","lines":["helps"],"id":7261},{"start":{"row":406,"column":2},"end":{"row":406,"column":9},"action":"insert","lines":["strings"]}],[{"start":{"row":406,"column":19},"end":{"row":406,"column":23},"action":"remove","lines":["help"],"id":7262},{"start":{"row":406,"column":19},"end":{"row":406,"column":20},"action":"insert","lines":["s"]}],[{"start":{"row":406,"column":20},"end":{"row":406,"column":21},"action":"insert","lines":["t"],"id":7263}],[{"start":{"row":406,"column":21},"end":{"row":406,"column":22},"action":"insert","lines":["r"],"id":7264}],[{"start":{"row":406,"column":22},"end":{"row":406,"column":23},"action":"insert","lines":["i"],"id":7265}],[{"start":{"row":406,"column":23},"end":{"row":406,"column":24},"action":"insert","lines":["n"],"id":7266}],[{"start":{"row":406,"column":24},"end":{"row":406,"column":25},"action":"insert","lines":["g"],"id":7267}],[{"start":{"row":407,"column":4},"end":{"row":407,"column":8},"action":"remove","lines":["help"],"id":7277},{"start":{"row":407,"column":4},"end":{"row":407,"column":5},"action":"insert","lines":["s"]}],[{"start":{"row":407,"column":5},"end":{"row":407,"column":6},"action":"insert","lines":["t"],"id":7278}],[{"start":{"row":407,"column":6},"end":{"row":407,"column":7},"action":"insert","lines":["r"],"id":7279}],[{"start":{"row":407,"column":7},"end":{"row":407,"column":8},"action":"insert","lines":["i"],"id":7280}],[{"start":{"row":407,"column":8},"end":{"row":407,"column":9},"action":"insert","lines":["n"],"id":7281}],[{"start":{"row":407,"column":9},"end":{"row":407,"column":10},"action":"insert","lines":["g"],"id":7282}],[{"start":{"row":409,"column":8},"end":{"row":409,"column":12},"action":"remove","lines":["help"],"id":7283},{"start":{"row":409,"column":8},"end":{"row":409,"column":14},"action":"insert","lines":["string"]}],[{"start":{"row":319,"column":4},"end":{"row":320,"column":0},"action":"remove","lines":["",""],"id":7284}],[{"start":{"row":319,"column":4},"end":{"row":319,"column":6},"action":"remove","lines":["  "],"id":7285}],[{"start":{"row":319,"column":4},"end":{"row":319,"column":6},"action":"remove","lines":["  "],"id":7286}],[{"start":{"row":319,"column":20},"end":{"row":319,"column":38},"action":"remove","lines":["'No Strings Block'"],"id":7287},{"start":{"row":319,"column":20},"end":{"row":319,"column":21},"action":"insert","lines":["n"]}],[{"start":{"row":319,"column":21},"end":{"row":319,"column":22},"action":"insert","lines":["i"],"id":7288}],[{"start":{"row":319,"column":22},"end":{"row":319,"column":23},"action":"insert","lines":["l"],"id":7289}],[{"start":{"row":347,"column":23},"end":{"row":347,"column":43},"action":"remove","lines":["/^#ROOMS\\n#.*?\\n#0/m"],"id":7290},{"start":{"row":347,"column":23},"end":{"row":347,"column":45},"action":"insert","lines":["/^#ROOMS\\n#(.*?)\\n#0/m"]}],[{"start":{"row":343,"column":23},"end":{"row":343,"column":45},"action":"remove","lines":["/^#OBJECTS\\n#.*?\\n#0/m"],"id":7291},{"start":{"row":343,"column":23},"end":{"row":343,"column":47},"action":"insert","lines":["/^#OBJECTS\\n#(.*?)\\n#0/m"]}],[{"start":{"row":375,"column":83},"end":{"row":376,"column":0},"action":"insert","lines":["",""],"id":7292},{"start":{"row":376,"column":0},"end":{"row":376,"column":11},"action":"insert","lines":["           "]}],[{"start":{"row":376,"column":11},"end":{"row":376,"column":83},"action":"insert","lines":["\"<h1>Rooms</h1>#{format_hash(rooms_block) if rooms_block != nil}<hr>\" <<"],"id":7293}],[{"start":{"row":375,"column":11},"end":{"row":375,"column":12},"action":"insert","lines":["#"],"id":7294}],[{"start":{"row":376,"column":28},"end":{"row":376,"column":51},"action":"remove","lines":["format_hash(rooms_block"],"id":7295},{"start":{"row":376,"column":28},"end":{"row":376,"column":70},"action":"insert","lines":["area_file.match(/^#ROOMS\\n#(.*?)\\n#0/m)[1]"]}],[{"start":{"row":376,"column":72},"end":{"row":376,"column":93},"action":"remove","lines":["if rooms_block != nil"],"id":7296}],[{"start":{"row":376,"column":71},"end":{"row":376,"column":72},"action":"remove","lines":[" "],"id":7297}],[{"start":{"row":376,"column":70},"end":{"row":376,"column":71},"action":"remove","lines":[")"],"id":7298}],[{"start":{"row":349,"column":4},"end":{"row":349,"column":5},"action":"insert","lines":["#"],"id":7299}],[{"start":{"row":349,"column":4},"end":{"row":349,"column":5},"action":"remove","lines":["#"],"id":7300}],[{"start":{"row":348,"column":6},"end":{"row":348,"column":7},"action":"insert","lines":["#"],"id":7301}],[{"start":{"row":352,"column":28},"end":{"row":352,"column":33},"action":"remove","lines":["rooms"],"id":7302},{"start":{"row":352,"column":28},"end":{"row":352,"column":29},"action":"insert","lines":["s"]}],[{"start":{"row":352,"column":29},"end":{"row":352,"column":30},"action":"insert","lines":["t"],"id":7303}],[{"start":{"row":352,"column":22},"end":{"row":352,"column":30},"action":"remove","lines":["parse_st"],"id":7304},{"start":{"row":352,"column":22},"end":{"row":352,"column":35},"action":"insert","lines":["parse_strings"]}],[{"start":{"row":348,"column":6},"end":{"row":348,"column":7},"action":"remove","lines":["#"],"id":7305}],[{"start":{"row":376,"column":0},"end":{"row":376,"column":79},"action":"remove","lines":["           \"<h1>Rooms</h1>#{area_file.match(/^#ROOMS\\n#(.*?)\\n#0/m)[1]}<hr>\" <<"],"id":7306}],[{"start":{"row":375,"column":84},"end":{"row":376,"column":0},"action":"remove","lines":["",""],"id":7307}],[{"start":{"row":375,"column":11},"end":{"row":375,"column":12},"action":"remove","lines":["#"],"id":7308}],[{"start":{"row":417,"column":9},"end":{"row":417,"column":19},"action":"remove","lines":["helps_info"],"id":7309},{"start":{"row":417,"column":9},"end":{"row":417,"column":21},"action":"insert","lines":["strings_info"]}],[{"start":{"row":413,"column":4},"end":{"row":413,"column":14},"action":"remove","lines":["helps_info"],"id":7310},{"start":{"row":413,"column":4},"end":{"row":413,"column":16},"action":"insert","lines":["strings_info"]}],[{"start":{"row":409,"column":4},"end":{"row":409,"column":13},"action":"remove","lines":["help_info"],"id":7311},{"start":{"row":409,"column":4},"end":{"row":409,"column":15},"action":"insert","lines":["string_info"]}],[{"start":{"row":410,"column":4},"end":{"row":410,"column":13},"action":"remove","lines":["help_info"],"id":7312},{"start":{"row":410,"column":4},"end":{"row":410,"column":15},"action":"insert","lines":["string_info"]}],[{"start":{"row":411,"column":4},"end":{"row":411,"column":13},"action":"remove","lines":["help_info"],"id":7313},{"start":{"row":411,"column":4},"end":{"row":411,"column":15},"action":"insert","lines":["string_info"]}],[{"start":{"row":413,"column":22},"end":{"row":413,"column":31},"action":"remove","lines":["help_info"],"id":7314},{"start":{"row":413,"column":22},"end":{"row":413,"column":33},"action":"insert","lines":["string_info"]}],[{"start":{"row":403,"column":12},"end":{"row":403,"column":25},"action":"remove","lines":["strings_block"],"id":7315},{"start":{"row":403,"column":12},"end":{"row":403,"column":25},"action":"insert","lines":["strings_block"]}],[{"start":{"row":408,"column":22},"end":{"row":408,"column":43},"action":"remove","lines":["^(\\d*) (.*)~\\n([^~]*)"],"id":7316},{"start":{"row":408,"column":22},"end":{"row":408,"column":45},"action":"insert","lines":["(\\d*)\\n(.*)\\n~\\n(.*)\\n~"]}],[{"start":{"row":408,"column":22},"end":{"row":408,"column":23},"action":"insert","lines":["^"],"id":7317}],[{"start":{"row":403,"column":8},"end":{"row":403,"column":9},"action":"remove","lines":["s"],"id":7318}],[{"start":{"row":403,"column":8},"end":{"row":403,"column":9},"action":"insert","lines":["_"],"id":7319}],[{"start":{"row":403,"column":9},"end":{"row":403,"column":10},"action":"insert","lines":["S"],"id":7320}],[{"start":{"row":403,"column":10},"end":{"row":403,"column":11},"action":"insert","lines":["e"],"id":7321}],[{"start":{"row":403,"column":11},"end":{"row":403,"column":12},"action":"insert","lines":["t"],"id":7322}],[{"start":{"row":403,"column":11},"end":{"row":403,"column":12},"action":"remove","lines":["t"],"id":7323}],[{"start":{"row":403,"column":10},"end":{"row":403,"column":11},"action":"remove","lines":["e"],"id":7324}],[{"start":{"row":403,"column":9},"end":{"row":403,"column":10},"action":"remove","lines":["S"],"id":7325}],[{"start":{"row":403,"column":9},"end":{"row":403,"column":10},"action":"insert","lines":["s"],"id":7326}],[{"start":{"row":403,"column":10},"end":{"row":403,"column":11},"action":"insert","lines":["e"],"id":7327}],[{"start":{"row":403,"column":11},"end":{"row":403,"column":12},"action":"insert","lines":["t"],"id":7328}],[{"start":{"row":403,"column":12},"end":{"row":403,"column":13},"action":"insert","lines":["s"],"id":7329}],[{"start":{"row":405,"column":2},"end":{"row":405,"column":9},"action":"remove","lines":["strings"],"id":7330},{"start":{"row":405,"column":2},"end":{"row":405,"column":13},"action":"insert","lines":["string_sets"]}],[{"start":{"row":405,"column":23},"end":{"row":405,"column":29},"action":"remove","lines":["string"],"id":7331},{"start":{"row":405,"column":23},"end":{"row":405,"column":34},"action":"insert","lines":["string_sets"]}],[{"start":{"row":405,"column":33},"end":{"row":405,"column":34},"action":"remove","lines":["s"],"id":7332}],[{"start":{"row":408,"column":8},"end":{"row":408,"column":14},"action":"remove","lines":["string"],"id":7333},{"start":{"row":408,"column":8},"end":{"row":408,"column":18},"action":"insert","lines":["string_set"]}],[{"start":{"row":352,"column":66},"end":{"row":352,"column":67},"action":"insert","lines":["("],"id":7335}],[{"start":{"row":352,"column":70},"end":{"row":352,"column":71},"action":"insert","lines":[")"],"id":7336}],[{"start":{"row":399,"column":0},"end":{"row":418,"column":3},"action":"remove","lines":["def parse_strings( strings_block )","  strings_info = Hash.new","  i = 1","  ","  string_sets = strings_block.split(\"#\").map(&:strip)","","  string_sets.each do |string_set|","    string_info = Hash.new","    ","    m = string_set.match(/^(\\d*)\\n(.*)\\n~\\n(.*)\\n~/)","    string_info[\"min_level\"] = m[1].to_i","    string_info[\"keywords\"]  = m[2].strip","    string_info[\"body\"]      = m[3].strip","    ","    strings_info[i] = string_info","    i = i + 1","  end","  ","  return strings_info","end"],"id":7337}]]},"ace":{"folds":[],"scrolltop":5469,"scrollleft":0,"selection":{"start":{"row":399,"column":0},"end":{"row":399,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":297,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1460870481494}